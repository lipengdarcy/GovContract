<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.witsafe.dao.NationstandardMapper">

  <resultMap id="BaseResultMap" type="com.witsafe.model.Nationstandard">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="standardNo" jdbcType="VARCHAR" property="standardno" />
    <result column="name_ch" jdbcType="VARCHAR" property="nameCh" />
    <result column="name_en" jdbcType="VARCHAR" property="nameEn" />
    <result column="publish_date" jdbcType="DATE" property="publishDate" />
    <result column="effect_date" jdbcType="DATE" property="effectDate" />
    <result column="name_replace" jdbcType="LONGVARCHAR" property="name_replace" />
    <result column="type_ch" jdbcType="VARCHAR" property="typeCh" />
    <result column="type_iso" jdbcType="VARCHAR" property="typeIso" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.witsafe.model.NationstandardWithBLOBs">
    <result column="valid_range" jdbcType="LONGVARCHAR" property="validRange" />
    <result column="standardNo_replace" jdbcType="VARCHAR" property="standardnoReplace" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, standardNo, name_ch, name_en, publish_date, effect_date,  
    name_replace, type_ch, type_iso, publisher
  </sql>
  <sql id="Blob_Column_List">
    valid_range, standardNo_replace
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.witsafe.model.NationstandardExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nationstandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.witsafe.model.NationstandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nationstandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nationstandard
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nationstandard
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.witsafe.model.NationstandardExample">
    delete from nationstandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.witsafe.model.Nationstandard">
    insert into nationstandard (id, standardNo, name_ch, 
      name_en, publish_date, effect_date, 
      standardNo_replace, name_replace, type_ch, 
      type_iso, publisher, valid_range
      )
    values (#{id,jdbcType=INTEGER}, #{standardno,jdbcType=VARCHAR}, #{nameCh,jdbcType=VARCHAR}, 
      #{nameEn,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, #{effectDate,jdbcType=DATE}, 
      #{standardnoReplace,jdbcType=VARCHAR}, #{nameReplace,jdbcType=VARCHAR}, #{typeCh,jdbcType=VARCHAR}, 
      #{typeIso,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{validRange,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.witsafe.model.Nationstandard">
    insert into nationstandard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="standardno != null">
        standardNo,
      </if>
      <if test="nameCh != null">
        name_ch,
      </if>
      <if test="nameEn != null">
        name_en,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="effectDate != null">
        effect_date,
      </if>
      <if test="standardnoReplace != null">
        standardNo_replace,
      </if>
      <if test="nameReplace != null">
        name_replace,
      </if>
      <if test="typeCh != null">
        type_ch,
      </if>
      <if test="typeIso != null">
        type_iso,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="validRange != null">
        valid_range,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="standardno != null">
        #{standardno,jdbcType=VARCHAR},
      </if>
      <if test="nameCh != null">
        #{nameCh,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="effectDate != null">
        #{effectDate,jdbcType=DATE},
      </if>
      <if test="standardnoReplace != null">
        #{standardnoReplace,jdbcType=VARCHAR},
      </if>
      <if test="nameReplace != null">
        #{nameReplace,jdbcType=VARCHAR},
      </if>
      <if test="typeCh != null">
        #{typeCh,jdbcType=VARCHAR},
      </if>
      <if test="typeIso != null">
        #{typeIso,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="validRange != null">
        #{validRange,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.witsafe.model.NationstandardExample" resultType="java.lang.Integer">
    select count(*) from nationstandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nationstandard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.standardno != null">
        standardNo = #{record.standardno,jdbcType=VARCHAR},
      </if>
      <if test="record.nameCh != null">
        name_ch = #{record.nameCh,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null">
        name_en = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null">
        publish_date = #{record.publishDate,jdbcType=DATE},
      </if>
      <if test="record.effectDate != null">
        effect_date = #{record.effectDate,jdbcType=DATE},
      </if>
      <if test="record.standardnoReplace != null">
        standardNo_replace = #{record.standardnoReplace,jdbcType=VARCHAR},
      </if>
      <if test="record.nameReplace != null">
        name_replace = #{record.nameReplace,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCh != null">
        type_ch = #{record.typeCh,jdbcType=VARCHAR},
      </if>
      <if test="record.typeIso != null">
        type_iso = #{record.typeIso,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.validRange != null">
        valid_range = #{record.validRange,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nationstandard
    set id = #{record.id,jdbcType=INTEGER},
      standardNo = #{record.standardno,jdbcType=VARCHAR},
      name_ch = #{record.nameCh,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=DATE},
      effect_date = #{record.effectDate,jdbcType=DATE},
      standardNo_replace = #{record.standardnoReplace,jdbcType=VARCHAR},
      name_replace = #{record.nameReplace,jdbcType=VARCHAR},
      type_ch = #{record.typeCh,jdbcType=VARCHAR},
      type_iso = #{record.typeIso,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      valid_range = #{record.validRange,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nationstandard
    set id = #{record.id,jdbcType=INTEGER},
      standardNo = #{record.standardno,jdbcType=VARCHAR},
      name_ch = #{record.nameCh,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=DATE},
      effect_date = #{record.effectDate,jdbcType=DATE},
      standardNo_replace = #{record.standardnoReplace,jdbcType=VARCHAR},
      name_replace = #{record.nameReplace,jdbcType=VARCHAR},
      type_ch = #{record.typeCh,jdbcType=VARCHAR},
      type_iso = #{record.typeIso,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.witsafe.model.Nationstandard">
    update nationstandard
    <set>
      <if test="standardno != null">
        standardNo = #{standardno,jdbcType=VARCHAR},
      </if>
      <if test="nameCh != null">
        name_ch = #{nameCh,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="effectDate != null">
        effect_date = #{effectDate,jdbcType=DATE},
      </if>
      <if test="standardnoReplace != null">
        standardNo_replace = #{standardnoReplace,jdbcType=VARCHAR},
      </if>
      <if test="nameReplace != null">
        name_replace = #{nameReplace,jdbcType=VARCHAR},
      </if>
      <if test="typeCh != null">
        type_ch = #{typeCh,jdbcType=VARCHAR},
      </if>
      <if test="typeIso != null">
        type_iso = #{typeIso,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="validRange != null">
        valid_range = #{validRange,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.witsafe.model.Nationstandard">
    update nationstandard
    set standardNo = #{standardno,jdbcType=VARCHAR},
      name_ch = #{nameCh,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      effect_date = #{effectDate,jdbcType=DATE},
      standardNo_replace = #{standardnoReplace,jdbcType=VARCHAR},
      name_replace = #{nameReplace,jdbcType=VARCHAR},
      type_ch = #{typeCh,jdbcType=VARCHAR},
      type_iso = #{typeIso,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      valid_range = #{validRange,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.witsafe.model.Nationstandard">
    update nationstandard
    set standardNo = #{standardno,jdbcType=VARCHAR},
      name_ch = #{nameCh,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      effect_date = #{effectDate,jdbcType=DATE},
      standardNo_replace = #{standardnoReplace,jdbcType=VARCHAR},
      name_replace = #{nameReplace,jdbcType=VARCHAR},
      type_ch = #{typeCh,jdbcType=VARCHAR},
      type_iso = #{typeIso,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>